#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: i3wm Configuration Files
#+date: <2022-06-08 Wed>
#+author: Kristian Alexander P
#+email: alexforsale@yahoo.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.2 (Org mode 9.5.4)
#+cite_export:
* ~/.config/i3/config
  :PROPERTIES:
  :header-args: :tangle ~/.config/i3/config :mkdirp t
  :END:
** header
   #+begin_src conf
     # i3 config file (v4)
     #
     # Please see https://i3wm.org/docs/userguide.html for a complete reference!
     # This file is autogenerated using Emacs org-mode.
   #+end_src
** set the modifier key
   #+begin_src conf
     set $mod Mod4
   #+end_src
** variables
*** notify
    #+begin_src conf
      set $notify exec notify-send -t 1000
    #+end_src
*** navigation keysym
    #+begin_src conf
      set $up k
      set $down j
      set $left h
      set $right l
    #+end_src
*** workspaces
    #+begin_src conf
      set $ws1 "Terminal"
      set $ws2 "Codeditor"
      set $ws3 "Web"
      set $ws4 "Mail"
      set $ws5 "Multimedia"
      set $ws6 "Networks"
      set $ws7 "Messaging"
      set $ws8 "VM"
      set $ws9 "Games"
      set $ws10 "Others"
    #+end_src
*** Xresources
    #+begin_src conf
      # Xresources file
      # https://build.i3wm.org/docs/userguide.html#xresources
      set_from_resource         $background_i3wm	background      #000000
      set_from_resource         $foreground_i3wm	foreground      #000000
      set_from_resource         $color00_i3wm         color0          #000000
      set_from_resource         $color01_i3wm         color1          #000000
      set_from_resource         $color02_i3wm         color2          #000000
      set_from_resource         $color03_i3wm         color3          #000000
      set_from_resource         $color04_i3wm         color4          #000000
      set_from_resource         $color05_i3wm         color5          #000000
      set_from_resource         $color06_i3wm		color6          #000000
      set_from_resource         $color07_i3wm		color7          #000000
      set_from_resource         $color08_i3wm		color8          #000000
      set_from_resource         $color09_i3wm		color9          #000000
      set_from_resource         $color10_i3wm         color10         #000000
      set_from_resource         $color11_i3wm         color11         #000000
      set_from_resource         $color12_i3wm         color12         #000000
      set_from_resource         $color13_i3wm         color13         #000000
      set_from_resource         $color14_i3wm         color14         #000000
      set_from_resource         $color15_i3wm         color15         #000000

      # Theme colors
      # class                 border          backgr.         text            indic.                  child_border
      # My colors
      client.background	$background_i3wm

      client.focused          $foreground_i3wm	$background_i3wm	$foreground_i3wm	$background_i3wm        $background_i3wm
      client.unfocused        $foreground_i3wm	$background_i3wm	$foreground_i3wm	$background_i3wm        $background_i3wm
      client.focused_inactive	$foreground_i3wm	$background_i3wm	$foreground_i3wm	$background_i3wm        $background_i3wm
      client.urgent		$foreground_i3wm	$background_i3wm	$foreground_i3wm	$background_i3wm        $background_i3wm
      client.placeholder      $foreground_i3wm        $background_i3wm        $foreground_i3wm        $background_i3wm        $background_i3wm


    #+end_src
*** font
    #+begin_src conf
      font pango:Fantasque Sans Mono Regular 7
    #+end_src
*** refresh i3status
    #+begin_src conf
      set $refresh_i3status killall -SIGUSR1 i3status
    #+end_src
*** floating modifier
    #+begin_src conf
      # use Mouse+$mod to drag floating windows to their wanted position
      floating_modifier $mod
    #+end_src
** keybindings
*** fn keys - audio
    #+begin_src conf
      bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
      bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
      bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
      bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
    #+end_src
*** dunst
    #+begin_src conf
      bindsym $mod+F9 exec --no-startup-id dunst-volume up
      bindsym $mod+F8 exec --no-startup-id dunst-volume down
      bindsym $mod+f7 exec --no-startup-id dunst-volume toggle
    #+end_src
*** playerct.
    #+begin_src conf
      bindsym XF86AudioPlay exec playerctl play-pause
      bindsym XF86AudioNext exec playerctl next
      bindsym XF86AudioPrev exec playerctl previous

      bindsym $mod+F11 exec playerctl play-pause
      bindsym $mod+F12 exec playerctl next
      bindsym $mod+F10 exec playerctl previous
    #+end_src
*** fn keys - backlight
    #+begin_src conf
      # brightness
      bindsym XF86MonBrightnessUp exec --no-startup-id dunst-backlight up
      bindsym XF86MonBrightnessDown exec --no-startup-id dunst-backlight down

      bindsym $mod+F3 exec --no-startup-id dunst-backlight up
      bindsym $mod+F2 exec --no-startup-id dunst-backlight down
    #+end_src
*** browser
    #+begin_src conf
      # browser
      bindsym XF86MyComputer exec ${BROWSER}
      bindsym $mod+b exec ${BROWSER}
    #+end_src
*** mail
    #+begin_src conf
      # mail
      bindsym XF86Mail exec ${MAIL_APP}
      bindsym $mod+m exec ${MAIL_APP}
    #+end_src
*** editors
    #+begin_src conf
      # text editor
      bindsym $mod+n exec ${VISUAL}
      bindsym $mod+Shift+n exec ${TERMINAL} -e ${EDITOR}
    #+end_src
*** file manager
    #+begin_src conf
      # file manager
      bindsym $mod+e exec ${FILE}
    #+end_src

    #+begin_src conf
      # start a terminal
      bindsym $mod+Return exec ${TERMINAL}
    #+end_src
*** terminal
    #+begin_src conf
      # start terminal + screen
      bindsym $mod+Shift+Return exec ${TERMINAL} -e screen -m
    #+end_src
*** kill focused window
    #+begin_src conf
      # kill focused window
      bindsym $mod+Shift+F4 kill
      bindsym Mod1+F4 kill
    #+end_src
*** rofi menu
    #+begin_src conf
      # start rofi-menu
      bindsym $mod+d exec --no-startup-id rofi -show drun
      #bindsym $mod+Shift-d exec --no-startup-id rofi-menu_full
    #+end_src
*** wifi helper script
    #+begin_src conf
      # wifi-helper script
      bindsym $mod+w exec wifi-helper
    #+end_src
*** change focus
    #+begin_src conf
      # change focus
      bindsym $mod+$left focus left
      bindsym $mod+$down focus down
      bindsym $mod+$up focus up
      bindsym $mod+$right focus right

      # alternatively, you can use the cursor keys:
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right
    #+end_src
*** move focused window
    #+begin_src conf
      # move focused window
      bindsym $mod+Shift+$left move left
      bindsym $mod+Shift+$down move down
      bindsym $mod+Shift+$up move up
      bindsym $mod+Shift+$right move right

      # alternatively, you can use the cursor keys:
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right
    #+end_src
*** splits
    #+begin_src conf
      # split in horizontal orientation
      bindsym $mod+Control+h split h; exec $notify "Horizontal split"

      # split in vertical orientation
      bindsym $mod+Control+v split v exec $notify "Vertical split"
    #+end_src
*** fullscreen
    #+begin_src conf
      # enter fullscreen mode for the focused container
      bindsym $mod+f fullscreen toggle; exec $notify "Fullscreen toggle"
    #+end_src
*** container layout
    #+begin_src conf
      # change container layout (stacked, tabbed, toggle split)
      bindsym $mod+Control+s layout stacking; exec $notify "Stacking layout"
      bindsym $mod+Control+w layout tabbed; exec $notify "Tabbed layout"
      bindsym $mod+Control+e layout toggle split; exec $notify "Split toggle"
    #+end_src
*** toggle tiling / floating
    #+begin_src conf
      # toggle tiling / floating
      bindsym $mod+Shift+space floating toggle; exec $notify "Floating toggle"
    #+end_src
*** change focus between tiling / floating
    #+begin_src conf
      # change focus between tiling / floating windows
      bindsym $mod+space focus mode_toggle; exec $notify "Window focus toggle"
    #+end_src
*** focus container
    #+begin_src conf
      # focus the parent container
      bindsym $mod+Control+a focus parent; exec $notify "Focus parentcontainer"

      # focus the child container
      bindsym $mod+Control+d focus child; exec $notify "Focus child container"
    #+end_src
*** scratchpad
    #+begin_src conf
      # move the currently focused window to the scratchpad
      bindsym $mod+Shift+minus move scratchpad; exec $notify "Moved to scratchpad"

      # Show the next scratchpad window or hide the focused scratchpad window.
      # If there are multiple scratchpad windows, this command cycles through them.
      bindsym $mod+minus scratchpad show; exec $notify "Show scratchpad"
    #+end_src
*** workspaces
    #+begin_src conf
      # hardcoded
      # TODO: use variable names
      workspace $ws1 output VGA-0 primary
      workspace $ws2 output VGA-0 primary
      workspace $ws3 output VGA-0 primary
      workspace $ws4 output VGA-0 primary
      workspace $ws5 output VGA-0 primary
      workspace $ws6 output VGA-1 right primary
      workspace $ws7 output VGA-1 right primary
      workspace $ws8 output VGA-1 right primary
      workspace $ws9 output VGA-1 right primary
      workspace $ws10 output VGA-1 right primary
    #+end_src
*** workspace switching
    #+begin_src conf
      # switch to workspace
      bindsym $mod+1 workspace $ws1
      bindsym $mod+2 workspace $ws2
      bindsym $mod+3 workspace $ws3
      bindsym $mod+4 workspace $ws4
      bindsym $mod+5 workspace $ws5
      bindsym $mod+6 workspace $ws6
      bindsym $mod+7 workspace $ws7
      bindsym $mod+8 workspace $ws8
      bindsym $mod+9 workspace $ws9
      bindsym $mod+0 workspace $ws10
    #+end_src
*** workspace move containers
    #+begin_src conf
      # move focused container to workspace
      bindsym $mod+Shift+1 move container to workspace $ws1
      bindsym $mod+Shift+2 move container to workspace $ws2
      bindsym $mod+Shift+3 move container to workspace $ws3
      bindsym $mod+Shift+4 move container to workspace $ws4
      bindsym $mod+Shift+5 move container to workspace $ws5
      bindsym $mod+Shift+6 move container to workspace $ws6
      bindsym $mod+Shift+7 move container to workspace $ws7
      bindsym $mod+Shift+8 move container to workspace $ws8
      bindsym $mod+Shift+9 move container to workspace $ws9
      bindsym $mod+Shift+0 move container to workspace $ws10
    #+end_src
*** workspace movement
    #+begin_src conf
      # moving to next/previous workspace using bracket{left,right}
      bindsym Control+Mod1+bracketleft move to workspace previous
      bindsym Control+Mod1+bracketright move to workspace next
    #+end_src
*** workspace back-and-forth
    #+begin_src conf
      # set workspace back_and_forth
      workspace_auto_back_and_forth yes

      # also set the binding
      bindsym $mod+Tab workspace back_and_forth
      bindsym $mod+Shift+Tab move container to workspace back_and_forth
    #+end_src
*** switch display output
    #+begin_src conf
      # switch output focus
      bindsym $mod+Control+1 focus output primary
      bindsym $mod+Control+2 focus output right

      # moving workspace between output
      bindsym $mod+Control+Shift+1 move workspace to output primary
      bindsym $mod+Control+Shift+2 move workspace to output right
    #+end_src
*** reload config
    #+begin_src conf
      # reload the configuration file
      bindsym $mod+Shift+F11 reload
    #+end_src
*** restart i3
    #+begin_src conf
      # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
      bindsym $mod+Control+r restart
    #+end_src
*** logout i3
    #+begin_src conf
      # exit i3 (logs you out of your X session)
      bindsym $mod+Shift+e exec prompt "Exit i3? This will end your X session." "i3-msg exit"
    #+end_src
*** reboot
    #+begin_src conf
      # reboot
      bindsym $mod+Shift+r exec prompt "Reboot computer?" "shutdown -r now"
    #+end_src
*** shutdwon
    #+begin_src conf
      # shutdown
      bindsym $mod+Shift+q exec prompt "Shutdown computer?" "poweroff"
    #+end_src
*** resize mode
    #+begin_src conf
      # resize window (you can also use the mouse for that)
      mode "resize" {
      # These bindings trigger as soon as you enter the resize mode

      # Pressing left will shrink the window’s width.
      # Pressing right will grow the window’s width.
      # Pressing up will shrink the window’s height.
      # Pressing down will grow the window’s height.
      bindsym $left       resize shrink width 10 px or 10 ppt
      bindsym $down       resize grow height 10 px or 10 ppt
      bindsym $up         resize shrink height 10 px or 10 ppt
      bindsym $right      resize grow width 10 px or 10 ppt

      # same bindings, but for the arrow keys
      bindsym Left        resize shrink width 10 px or 10 ppt
      bindsym Down        resize grow height 10 px or 10 ppt
      bindsym Up          resize shrink height 10 px or 10 ppt
      bindsym Right       resize grow width 10 px or 10 ppt

      # back to normal: Enter or Escape or $mod+r
      bindsym Return mode "default"
      bindsym Escape mode "default"
      bindsym $mod+r mode "default"
      }

      bindsym $mod+r mode "resize"
    #+end_src
*** bar
    #+begin_src conf
      bar {
          status_command i3status
          position bottom
          workspace_buttons yes
          mode dock
          colors {
              statusline          $color04_i3wm
              background          $background_i3wm
              separator           $color03_i3wm
                #                  BORDER         BACKGROUND        TEXT
              focused_workspace   $color03_i3wm   $color00_i3wm     $color02_i3wm
              inactive_workspace  $color00_i3wm   $color00_i3wm     $color02_i3wm
              active_workspace    $color00_i3wm   $color00_i3wm     $color01_i3wm
              urgent_workspace    $color01_i3wm   $background_i3wm  $color00_i3wm
              binding_mode        $color03_i3wm   $background_i3wm  $color00_i3wm
          }
      }

      bindsym $mod+Control+m bar mode toggle
    #+end_src
*** app autostart
**** picom
     #+begin_src conf
       # application autostart
       # picom
       exec --no-startup-id picom -b --config "${XDG_CONFIG_HOME}"/picom/picom.conf &
     #+end_src
**** polybar
     #+begin_src conf
       # polybar
       #exec --no-startup-id polybar-launch
     #+end_src
**** lightlocker
     #+begin_src conf
       # light-locker
       exec --no-startup-id light-locker
     #+end_src
**** nm-applet
     #+begin_src conf
       # nm-applet
       exec --no-startup-id nm-applet
     #+end_src
**** wallpaper
     #+begin_src conf
       # setwallpaper script
       exec --no-startup-id wal -R
     #+end_src
*** window rules
    #+begin_src conf
      # window rule
      for_window [class=".*"] border pixel 0
      for_window [instance="(?)pavucontrol"] floating enable
      for_window [window_role="pop-up"] floating enable
      for_window [instance="(?)engrampa"] floating enable
      for_window [window_role="GtkFileChooserDialog"] floating enable
      for_window [title="(?)alsamixer"] floating enable
      for_window [class="(?)Qtconfig-qt4"] floating enable
      for_window [title="(?)nmtui"] floating enable
      for_window [window_role="buddy_list"] floating enable, resize set 360 680
      for_window [window_role="conversation"] floating enable, resize set 480 680
      for_window [class="(?)blueman-manager"] floating enable, resize set 512 256
    #+end_src
*** workspace assignments
    #+begin_src conf
      # windows workspace assignment
      # 1
      assign [class="(?)uxterm"] $ws1
      assign [class="(?)urxvt"] $ws1
      assign [class="(?)gnome-terminal"] $ws1

      # 2
      assign [class="(?)emacs"] $ws2
      assign [class="(?)leafpad"] $ws2
      assign [class="(?)l3afpad"] $ws2
      assign [class="(?)gedit"] $ws2
      assign [title="(?)libreoffice"] $ws2

      # 3
      assign [class="(?)qutebrowser"] $ws3
      assign [class="(?)firefox"] $ws3
      assign [class="(?)google-chrome"] $ws3

      # 4
      assign [class="(?)evolution"] $ws4
      assign [class="(?)thunderbird"] $ws4

      # 5
      assign [class="(?)rhythmbox"] $ws5
      assign [class="(?)vlc"] $ws5
      assign [class="(?)mpv"] $ws5

      # 6
      assign [class="(?)org.remmina.remmina"] $ws6

      # 7
      assign [class="(?)pidgin"] $ws7

      # 10
      assign [class="(?)gucharmap"] $ws10
    #+end_src
* ~/.local/bin/prompt
  :PROPERTIES:
  :header-args: :tangle ~/.local/bin/prompt :mkdirp t :shebang #!/bin/sh
  :END:
** header
   #+begin_src sh
     # A rofi/dmenu binary prompt script.
     # Gives a dmenu prompt labeled with $1 to perform command $2.
     # For example:
     # `./prompt "Do you want to shutdown?" "shutdown -h now"`
     # <alexforsale@yahoo.com>
   #+end_src
** the script
   #+begin_src sh
     if [ "$(command -v rofi)" ];then
         [ "$(printf "No\\nYes" | rofi -font "Fanstasque Sans Mono 10" \
             -lines 2 -width 25 -hide-scrollbar true -bw 0 -line-padding 10 \
             -padding 20 -xoffset 0 -yoffset 0 -location 0 -columns 2 -color-enabled true \
             -dmenu -i -p "$1" -nb darkred -sb red -sf white -nf gray )" = "Yes" ] && $2
     elif [ "$(command -v dmenu)" ];then
         [ "$(printf "No\\nYes" | dmenu -i -p "$1" -nb darkred -sb red -sf white -nf gray )" = "Yes" ] && $2
     else
         notify-send -t 300 "${HOME}/.local/bin/prompt needs either rofi or dmenu installed!"
         exit 1
     fi
   #+end_src
