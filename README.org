#+options: ':nil *:t -:t ::t <:t H:2 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: i3wm Configuration Files
#+date: <2022-06-08 Wed>
#+author: Kristian Alexander P
#+email: alexforsale@yahoo.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.2 (Org mode 9.5.4)
#+cite_export:
#+startup: indent fold
#+export_file_name: index.html
#+setupfile: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

* About
This is my personal /i3wm/ configuration. The actual code itself is inside this one /org-mode/ file that can be /tangled/ from inside /Emacs/ with the command =org-babel-tangle-file=.
[[./assets/img/i3wm.png][file:./assets/img/i3wm.png]]
* i3wm
:PROPERTIES:
:header-args: :tangle ./.config/i3/config :mkdirp t
:END:
The [[https://wiki.archlinux.org/title/i3][i3-wm]] package that I used is from the default repository in /archlinux/.
** header                                                         :noexport:
#+begin_src conf +n
  # i3 config file (v4) -*- eval: (rainbow-mode 1) -*-
  #
  # Please see https://i3wm.org/docs/userguide.html for a complete reference!
  # This file is autogenerated using Emacs org-mode.
#+end_src

** variables
Mostly these variables are set to avoid repetion.
*** mod key
=Mod4= is the =Super= key, or =Win= key for the rest of the world. =Mod1= is =Alt=[fn:1]. You don't have to set this variable, but by using variable, we can change the /mod/ key without having to change each individual lines of keybindings.
#+begin_src conf -n
  set $mod Mod4
#+end_src
*** notify
I used [[https://wiki.archlinux.org/title/Dunst][dunst]] as a desktop notification, though there's many other packages that can replace it. I prefer /dunst/ because it's easier to configure.
#+begin_src conf -n
  set $notify exec notify-send -t 1000
#+end_src

*** refresh i3status
The preferred status bar for /i3/, I like the simplicity of [[https://github.com/i3/i3status][i3status]].
#+begin_src conf -n
  set $refresh_i3status killall -SIGUSR1 i3status
#+end_src

*** navigation keys
I use /vim/ keys obviously.
#+begin_src conf -n
  set $up k
  set $down j
  set $left h
  set $right l
#+end_src

*** workspaces
I tried to have a uniformed workspaces across all my window manager configurations. Some
#+begin_src conf -n
  set $ws1 "1: Term"
  set $ws2 "2: Code"
  set $ws3 "3: Web"
  set $ws4 "4: Mail"
  set $ws5 "5: File"
  set $ws6 "6: Office"
  set $ws7 "7: Games"
  set $ws8 "8: Remote"
  set $ws9 "9: Torrent"
  set $ws10 "10: Chat"
#+end_src

Set ==workspace_back_and_forth=
#+begin_src conf -n
  workspace_auto_back_and_forth yes
#+end_src
*** applications
#+begin_src conf -n
  set $terminal alacritty
  set $browser firefox
  set $mail thunderbird
  set $guiemacs emacsclient -c -a emacs
  set $tuiemacs emacsclient -t -a emacs
  set $file thunar
#+end_src

*** Xresouces
#+begin_src conf -n
  #### https://build.i3wm.org/docs/userguide.html#xresources
  set_from_resource         $background_i3wm  background      #000000
  set_from_resource         $foreground_i3wm  foreground      #000000
  set_from_resource         $color00_i3wm         color0          #000000
  set_from_resource         $color01_i3wm         color1          #000000
  set_from_resource         $color02_i3wm         color2          #000000
  set_from_resource         $color03_i3wm         color3          #000000
  set_from_resource         $color04_i3wm         color4          #000000
  set_from_resource         $color05_i3wm         color5          #000000
  set_from_resource         $color06_i3wm   color6          #000000
  set_from_resource         $color07_i3wm   color7          #000000
  set_from_resource         $color08_i3wm   color8          #000000
  set_from_resource         $color09_i3wm   color9          #000000
  set_from_resource         $color10_i3wm         color10         #000000
  set_from_resource         $color11_i3wm         color11         #000000
  set_from_resource         $color12_i3wm         color12         #000000
  set_from_resource         $color13_i3wm         color13         #000000
  set_from_resource         $color14_i3wm         color14         #000000
  set_from_resource         $color15_i3wm         color15         #000000
#+end_src

*** Colors
#+begin_src conf -n
  # Theme colors
  # class                 border          backgr.         text            indic.                  child_border
  # My colors
  client.background $background_i3wm

  client.focused          $foreground_i3wm  $background_i3wm  $foreground_i3wm $background_i3wm $background_i3wm
  client.unfocused        $foreground_i3wm  $background_i3wm  $foreground_i3wm $background_i3wm $background_i3wm
  client.focused_inactive $foreground_i3wm  $background_i3wm  $foreground_i3wm $background_i3wm $background_i3wm
  client.urgent           $foreground_i3wm  $background_i3wm  $foreground_i3wm $background_i3wm $background_i3wm
  client.placeholder      $foreground_i3wm  $background_i3wm  $foreground_i3wm $background_i3wm $background_i3wm
#+end_src

*** font
#+begin_src conf -n
  # font
  font pango:JetBrainsMonoNL Nerd Font Mono 10
#+end_src

*** floating modifier
#+begin_src conf -n
  floating_modifier $mod
#+end_src

** bar
#+begin_src conf -n
  bar {
    status_command i3status
    position bottom
    workspace_buttons yes
    mode dock
    colors {
      statusline          $color04_i3wm
      background          $background_i3wm
      separator           $color03_i3wm
      #                   BORDER          BACKGROUND        TEXT
      focused_workspace   $color03_i3wm   $color00_i3wm     $color02_i3wm
      inactive_workspace  $color00_i3wm   $color00_i3wm     $color02_i3wm
      active_workspace    $color00_i3wm   $color00_i3wm     $color01_i3wm
      urgent_workspace    $color01_i3wm   $background_i3wm  $color00_i3wm
      binding_mode        $color03_i3wm   $background_i3wm  $color00_i3wm
      }
  }
#+end_src

Also set keybinding for toggling bar.
#+begin_src conf -n
  bindsym $mod+Control+m bar mode toggle
#+end_src

** application autostart
#+begin_src conf -n
  exec --no-startup-id ~/.local/bin/monitor-setup
  exec --no-startup-id systemctl --user import-environment DISPLAY XDG_CURRENT_DESKTOP QT_QPA_PLATFORMTHEME QT_XCB_GL_INTEGRATION
  exec --no-startup-id dbus-update-activation-environment --systemd --all
  exec --no-startup-id dbus-launch --exit-with-session gnome-keyring-daemon --components=pkcs11,secrets,ssh -r -d
  exec --no-startup-id dbus-launch --exit-with-session /usr/lib/polkit-kde-authentication-agent-1 &
  exec --no-startup-id xsetroot -cursor_name left_ptr
  exec --no-startup-id xset r rate 300 30
  exec --no-startup-id xrdb -merge ~/.Xresources
  exec --no-startup-id dbus-launch --exit-with-session picom -b --config "${XDG_CONFIG_HOME}"/picom/picom.conf &
  exec --no-startup-id dbus-launch --exit-with-session udiskie -t &
  exec --no-startup-id dbus-launch --exit-with-session dunst -conf ~/.config/dunst/dunstrc &
  exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent &
  exec --no-startup-id dbus-launch --exit-with-session /usr/lib/kdeconnectd &
  exec --no-startup-id dbus-launch --exit-with-session nm-applet --indicator &
  exec --no-startup-id dbus-launch --exit-with-session xsettingsd &
  exec --no-startup-id ~/.fehbg
  exec --no-startup-id dbus-launch --exit-with-session blueman-applet
  exec --no-startup-id dbus-launch --exit-with-session unclutter
  exec --no-startup-id dbus-launch --exit-with-session volumeicon
  exec --no-startup-id dbus-launch --exit-with-session greenclip daemon>/dev/null
  exec --no-startup-id $file --daemon &
  #exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork --pointer=win --ignore-empty-password --color=2E3440 --show-failed-attempts
  exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock-fancy --nofork
  exec --no-startup-id dbus-launch --exit-with-session redshift
#+end_src

** window rule
#+begin_src conf -n
  for_window [class=".*"] border pixel 0
  for_window [instance="(?i)pavucontrol"] floating enable
  for_window [window_role="pop-up"] floating enable
  for_window [instance="(?i)engrampa"] floating enable
  for_window [window_role="GtkFileChooserDialog"] floating enable
  for_window [title="(?i)alsamixer"] floating enable
  for_window [class="(?i)qtconfig-qt4"] floating enable
  for_window [title="(?i)nmtui"] floating enable
  for_window [window_role="buddy_list"] floating enable, resize set 360 680
  for_window [window_role="conversation"] floating enable, resize set 480 680
  for_window [class="(?i)blueman.*"] floating enable, resize set 512 256
  for_window [class="evolution-alarm-notify"] floating enable
  for_window [class="Evolution-alarm-notify"] floating enable
  for_window [class="(?i)kooha"] floating enable
  for_window [class="^org.kde.polkit-kde-authentication-agent-1"] floating enable
  for_window [class="thunderbird" title="status"] floating enable
  for_window [class="thunderbird" title="(.*)Reminders"] floating enable
  for_window [class="thunderbird" title="Write.*"] floating enable
  for_window [class="thunderbird" title="Send.*"] floating enable
  for_window [class="Msgcompose.*"] floating enable
  for_window [class="QtPass"] floating enable
  for_window [class="(?i)zoom"] floating enable
  for_window [class="(?i)file-roller"] floating enable
  for_window [class="(?i)ncmpcpp"] floating enable
  for_window [class="(?i)khal"] floating enable
  for_window [class="(?i)htop"] floating enable
  for_window [class="(?i)nmtui"] floating enable
  for_window [class="(?i)vim"] floating enable
  for_window [class="(?i)org.kde.kdeconnect.app"] floating enable
  for_window [title="(?i)File Operation Progress"] floating enable
  for_window [class="(?i)showmethekey-gtk"] floating enable
  for_window [class="(?i)screenkey"] floating enable
  for_window [class="(?i)bitwarden"] floating enable
  for_window [class="(?i)authy.*"] floating enable
  for_window [class="(?i)transmission.*"] floating enable
  for_window [class="(?i)anydesk.*"] floating enable
  for_window [class="(?i)lxappearance"] floating enable
  for_window [class="(?i)steam.*"] floating enable
#+end_src

** workspace assignment

*** workspace 1
#+begin_src conf -n
  assign [class="XTerm"] $ws1
  assign [class="URxvt"] $ws1
  assign [class="Gnome-terminal"] $ws1
  assign [class="Termite"] $ws1
#+end_src

*** workspace 2
#+begin_src conf -n
  assign [class="Emacs"] $ws2
  assign [class="Leafpad"] $ws2
  assign [class="L3afpad"] $ws2
  assign [class="Gedit"] $ws2
  assign [class="code-oss"] $ws2
#+end_src

*** workspace 3
#+begin_src conf -n
  assign [class="qutebrowser"] $ws3
  assign [class="firefox"] $ws3
  assign [class="google-chrome"] $ws3
  assign [class="Nyxt"] $ws3
  assign [class="pidgin"] $ws7
#+end_src

*** workspace 4
#+begin_src conf -n
  assign [class="Evolution"] $ws4
  assign [class="thunderbird"] $ws4
#+end_src

*** workspace 5
#+begin_src conf -n
  assign [class="Rhythmbox"] $ws5
  assign [class="vlc"] $ws5
  assign [class="mpv"] $ws5
  assign [class="Cheese"] $ws5
  assign [class="Spotify"] $ws5
  assign [class="Picard"] $ws5
#+end_src

*** workspace 6
#+begin_src conf -n
  assign [class="org.remmina.remmina"] $ws6
  assign [class="Virt-manager"] $ws6
  assign [class="Vncviewer"] $ws6
#+end_src

*** workspace 7
#+begin_src conf -n
  assign [class="Steam"] $ws7
  assign [title="Steam"] $ws7
#+end_src
*** workspace 8
#+begin_src conf -n
  assign [title="Libreoffice"] $ws8
  assign [title="com-sonicwall-NetExtender"] $ws8
  assign [title="Bitwarden"] $ws8
  assign [title="zoom"] $ws8
#+end_src
*** workspace 9
#+begin_src conf -n
  assign [class="Gucharmap"] $ws9
  assign [class="org.gnome.Characters"] $ws9
  assign [class="Thunar"] $ws9
#+end_src
*** workspace 0
#+begin_src conf -n
assign [class="winbox.exe"] $ws10
#+end_src
** Keybindings
*** media keys
#+begin_src conf -n
  bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.local/bin/dunst-volume -i 1 && $refresh_i3status
  bindsym XF86AudioLowerVolume exec --no-startup-id ~/.local/bin/dunst-volume -d 1 && $refresh_i3status
  bindsym XF86AudioMute exec --no-startup-id ~/.local/bin/dunst-volume -t && $refresh_i3status
  bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

  bindsym XF86AudioPlay exec playerctl play-pause
  bindsym XF86AudioNext exec playerctl next
  bindsym XF86AudioPrev exec playerctl previous

  bindsym XF86MonBrightnessUp exec --no-startup-id ~/.local/bin/dunst-backlight +1%
  bindsym XF86MonBrightnessDown exec --no-startup-id ~/.local/bin/dunst-backlight 1%-

  bindsym Print exec flameshot gui
#+end_src

For keyboard with no media keys:
#+begin_src conf -n
  bindsym $mod+F9 exec --no-startup-id ~/.local/bin/dunst-volume -i 1 && $refresh_i3status
  bindsym $mod+F8 exec --no-startup-id ~/.local/bin/dunst-volume -d 1 && $refresh_i3status
  bindsym $mod+F7 exec --no-startup-id ~/.local/bin/dunst-volume -t && $refresh_i3status

  bindsym $mod+F11 exec playerctl play-pause
  bindsym $mod+F12 exec playerctl next
  bindsym $mod+F10 exec playerctl previous

  bindsym $mod+Shift+F3 exec --no-startup-id brightnessctl set +1%
  bindsym $mod+Shift+F2 exec --no-startup-id brightnessctl set 1%-
#+end_src
*** browser
#+begin_src conf -n
  bindsym XF86MyComputer exec $browser
  bindsym $mod+Mod1+f exec $browser
#+end_src
*** mail
#+begin_src conf -n
  bindsym XF86Mail exec $mail
  bindsym $mod+Mod1+t exec $mail
#+end_src
*** music
#+begin_src conf -n
  bindsym $mod+Mod1+m exec $terminal --class ncmpcpp -e ncmpcpp
#+end_src
*** htop
#+begin_src conf -n
  bindsym $mod+Mod1+h exec $terminal --class htop -e htop
#+end_src
*** nmtui
#+begin_src conf -n
  bindsym $mod+Mod1+w exec $terminal --class nmtui -e nmtui
#+end_src
*** khal
#+begin_src conf -n
  bindsym $mod+Mod1+k exec $terminal --class khal -e khal interactive
#+end_src
*** vim
#+begin_src conf -n
  bindsym $mod+Mod1+v exec $terminal --class vim -e vim
#+end_src
*** dired
#+begin_src conf
  bindsym $mod+Mod1+e exec emacsclient -c -a emacs -e '(dired (getenv "HOME"))'
#+end_src
*** rofi-pass
#+begin_src conf -n
  bindsym $mod+Mod1+p exec rofi-pass
#+end_src
*** rofi-calc
#+begin_src conf -n
  bindsym $mod+Mod1+c exec rofi -show calc -modi calc -no-show-match -no-sort -theme calculator
#+end_src
*** rofi-rbw
#+begin_src conf -n
  bindsym $mod+Mod1+b exec rofi-rbw
#+end_src
*** text editor
#+begin_src conf -n
  bindsym $mod+Mod1+n exec $guiemacs
  bindsym $mod+Control+n exec $terminal -e $tuiemacs
#+end_src
*** file manager
#+begin_src conf -n
  bindsym $mod+e exec $file
#+end_src
*** terminal
#+begin_src conf -n
  bindsym $mod+Return exec $terminal
#+end_src
*** terminal + screen
#+begin_src conf -n
  bindsym $mod+Shift+Return exec $terminal -e screen -m
#+end_src
*** kill focused window
#+begin_src conf -n
  bindsym $mod+Shift+F4 kill
  bindsym Mod1+F4 kill
#+end_src
*** rofi-menu
#+begin_src conf -n
  bindsym $mod+d exec --no-startup-id rofi -show drun -theme i3-apps
#+end_src
*** rofi-greenclip
#+begin_src conf -n
  bindsym $mod+c exec --no-startup-id rofi -theme i3-apps -modi "clipboard:greenclip print" -show clipboard
#+end_src
*** rofi window menu
#+begin_src conf -n
  bindsym $mod+shift+w exec rofi -theme i3-apps -show windowcd
  bindsym $mod+w exec rofi -theme i3-apps -show window
#+end_src
*** tesseract
#+begin_src conf -n
  bindsym $mod+shift+t exec ~/.local/bin/ocr
#+end_src
*** screenkey
#+begin_src conf -n
  bindsym $mod+Mod1+s exec screenkey
#+end_src
*** window management
**** change focus
#+begin_src conf -n
  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right
#+end_src
Alternatively, with arrow keys:
#+begin_src conf -n
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right
#+end_src
**** move focused window
#+begin_src conf -n
  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
#+end_src
Also, with arrow keys:
#+begin_src conf -n
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right
#+end_src
**** split
horizontally
#+begin_src conf -n
  bindsym $mod+Control+h split h; exec $notify "Horizontal split"
#+end_src
vertically
#+begin_src conf -n
    bindsym $mod+Control+v split v exec $notify "Vertical split"
#+end_src
**** fullscreen toggle
#+begin_src conf -n
  bindsym $mod+f fullscreen toggle; exec $notify "Fullscreen toggle"
#+end_src
**** container layout
stacked
#+begin_src conf -n
  bindsym $mod+Control+s layout stacking; exec $notify "Stacking layout"
#+end_src
tabbed
#+begin_src conf -n
  bindsym $mod+Control+w layout tabbed; exec $notify "Tabbed layout"
#+end_src
split
#+begin_src conf -n
  bindsym $mod+Control+e layout toggle split; exec $notify "Split toggle"
#+end_src
**** toggle tiling / floating
#+begin_src conf -n
  bindsym $mod+Shift+space floating toggle; exec $notify "Floating toggle"
#+end_src
**** change focus between tiling / floating windows
#+begin_src conf -n
  bindsym $mod+space focus mode_toggle; exec $notify "Window focus toggle"
#+end_src
**** focus parent container
#+begin_src conf -n
  bindsym $mod+Control+a focus parent; exec $notify "Focus parentcontainer"
#+end_src
**** focus child container
#+begin_src conf -n
  bindsym $mod+Control+d focus child; exec $notify "Focus child container"
#+end_src
**** move to scratchpad
Move the current focused window into the scratchpad
#+begin_src conf -n
  bindsym $mod+Shift+minus move scratchpad; exec $notify "Moved to scratchpad"
#+end_src
**** show scratchpad
Show the next scratchpad window or hide the focused scratchpad window. If there are multiple scratchpad windows, this command cycles through them.
#+begin_src conf -n
  bindsym $mod+minus scratchpad show; exec $notify "Show scratchpad"
#+end_src
*** workspace management
#+begin_src conf -n
  bindsym $mod+1 workspace $ws1
  bindsym $mod+2 workspace $ws2
  bindsym $mod+3 workspace $ws3
  bindsym $mod+4 workspace $ws4
  bindsym $mod+5 workspace $ws5
  bindsym $mod+6 workspace $ws6
  bindsym $mod+7 workspace $ws7
  bindsym $mod+8 workspace $ws8
  bindsym $mod+9 workspace $ws9
  bindsym $mod+0 workspace $ws10
#+end_src
**** switch to workspace prev / next
#+begin_src conf -n
  bindsym $mod+bracketleft workspace prev
  bindsym $mod+bracketright workspace next
#+end_src
**** move focused containerto workspace
#+begin_src conf -n
  bindsym $mod+Shift+1 move container to workspace $ws1
  bindsym $mod+Shift+2 move container to workspace $ws2
  bindsym $mod+Shift+3 move container to workspace $ws3
  bindsym $mod+Shift+4 move container to workspace $ws4
  bindsym $mod+Shift+5 move container to workspace $ws5
  bindsym $mod+Shift+6 move container to workspace $ws6
  bindsym $mod+Shift+7 move container to workspace $ws7
  bindsym $mod+Shift+8 move container to workspace $ws8
  bindsym $mod+Shift+9 move container to workspace $ws9
  bindsym $mod+Shift+0 move container to workspace $ws10
#+end_src
**** move using bracket keys
#+begin_src conf -n
  bindsym Control+Mod1+bracketleft move to workspace previous
  bindsym Control+Mod1+bracketright move to workspace next
#+end_src
**** back and forth
#+begin_src conf -n
  bindsym $mod+Tab workspace back_and_forth
  bindsym $mod+Shift+Tab move container to workspace back_and_forth
#+end_src
**** switch output focus
#+begin_src conf -n
  bindsym $mod+Control+1 focus output primary
  bindsym $mod+Control+2 focus output right
#+end_src
**** moving to output
#+begin_src conf -n
  bindsym $mod+Control+Shift+1 move workspace to output primary
  bindsym $mod+Control+Shift+2 move workspace to output right
#+end_src
*** Reload configuration
#+begin_src conf -n
  bindsym $mod+Shift+F11 reload
#+end_src
*** Hot restart
#+begin_src conf -n
  bindsym $mod+Control+r restart
#+end_src
*** exit i3
#+begin_src conf -n
  bindsym $mod+q exec ~/.local/bin/rofi-i3-logout
#+end_src
*** picom transparency
#+begin_src conf -n
  bindsym $mod+F3 exec picom-trans -c +5
  bindsym $mod+F2 exec picom-trans -c -5
#+end_src
*** modes
**** resize
#+begin_src conf -n
  # resize window (you can also use the mouse for that)
  mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym $left       resize shrink width 10 px or 10 ppt
  bindsym $down       resize grow height 10 px or 10 ppt
  bindsym $up         resize shrink height 10 px or 10 ppt
  bindsym $right      resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left        resize shrink width 10 px or 10 ppt
  bindsym Down        resize grow height 10 px or 10 ppt
  bindsym Up          resize shrink height 10 px or 10 ppt
  bindsym Right       resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
  }

  bindsym $mod+r mode "resize"
#+end_src
* i3status
:PROPERTIES:
:header-args: :tangle ./.config/i3status/config :mkdirp t
:END:
** header
#+begin_src conf -n
  # i3status configuration file.
  # see "man i3status" for documentation.

  # It is important that this file is edited as UTF-8.
  # The following line should contain a sharp s:
  # ß
  # If the above line is not correctly displayed, fix your editor first!
#+end_src
** general
#+begin_src conf -n
  general {
          colors = true
          interval = 5
          output_format = i3bar
  }
#+end_src
** order
#+begin_src conf -n
  order += "ipv6"
  order += "wireless _first_"
  order += "ethernet _first_"
  order += "battery 0"
  order += "memory"
  order += "tztime local"
#+end_src
** wireless
#+begin_src conf -n
  wireless _first_ {
          format_up = "󰖩: (%quality at %essid, %bitrate / %frequency) %ip"
          format_down = "󰖩: down"
  }
#+end_src
** ethernet
#+begin_src conf -n
  ethernet _first_ {
          format_up = "󰈀: %ip (%speed)"
          format_down = ""
  }
#+end_src
** battery
#+begin_src conf -n
  battery 0 {
          format = "%status %percentage %remaining"
          format_down = ""
          status_chr = "󰂄"
          status_bat = "󰂂"
          status_unk = "󰂑"
  }
#+end_src
** memory
#+begin_src conf -n
  memory {
          format = "󰍛 %used"
          threshold_degraded = "1G"
          format_degraded = "󰍛 < %available"
  }
#+end_src
** time
#+begin_src conf -n
  tztime local {
          format = "󰥔 %Y-%m-%d %H:%M:%S"
  }
#+end_src
* Scripts
** ocr
:PROPERTIES:
:header-args: :tangle ./.local/bin/ocr :mkdirp t :shebang #!/usr/bin/env bash
:END:
This utilize the [[https://github.com/tesseract-ocr/tesseract/][tesseract]] package. The script simply select an area in the desktop with /[[https://github.com/naelstrof/maim/][maim]]/, /pipe/ it into /tesseract/, which also pipes it into /[[https://github.com/astrand/xclip/][xclip]]/.
#+begin_src sh
  maim -u -s -b 5 -l -c 0.3,0.4,0.6,0.4 -d 0.1 | tesseract -l eng - - | xclip -selection clipboard
  notify-send -i ebook-reader "OCR" "Saved to clipboard"
#+end_src
** Rofi
*** i3-nord theme
:PROPERTIES:
:header-args: :tangle ./.config/rofi/themes/i3-nord.rasi :mkdirp t
:END:
I separate the main /nord/ theme here so I can make changes to it without 'disturbing' other window manager settings.
#+begin_src css -n
  /* -*-css-*- */
  /**
   ,* Nordic rofi theme
   ,* Adapted by undiabler <undiabler@gmail.com>
   ,*
   ,* Nord Color palette imported from https://www.nordtheme.com/
   ,*
   ,*/


  ,* {
      nord0: #2e3440;
      nord1: #3b4252;
      nord2: #434c5e;
      nord3: #4c566a;

      nord4: #d8dee9;
      nord5: #e5e9f0;
      nord6: #eceff4;

      nord7: #8fbcbb;
      nord8: #88c0d0;
      nord9: #81a1c1;
      nord10: #5e81ac;
      nord11: #bf616a;

      nord12: #d08770;
      nord13: #ebcb8b;
      nord14: #a3be8c;
      nord15: #b48ead;

      foreground:  @nord9;
      backlight:   #ccffeedd;
      background-color:  transparent;

      highlight:     underline bold #eceff4;

      transparent: rgba(46,52,64,0);
  }

  window {
      location: center;
      anchor:   center;
      transparency: "screenshot";
      padding: 10px;
      border:  0px;
      border-radius: 6px;

      background-color: @transparent;
      spacing: 0;
      children:  [mainbox];
      orientation: horizontal;
  }

  mainbox {
      spacing: 0;
      children: [ inputbar, message, listview ];
  }

  message {
      color: @nord0;
      padding: 5;
      border-color: @foreground;
      border:  0px 2px 2px 2px;
      background-color: @nord7;
  }

  inputbar {
      color: @nord6;
      padding: 11px;
      background-color: @nord1;

      border: 1px;
      border-radius:  6px 6px 0px 0px;
      border-color: @nord10;
  }

  entry, prompt, case-indicator {
      text-font: inherit;
      text-color:inherit;
  }

  prompt {
      margin: 0px 1em 0em 0em ;
  }

  listview {
      padding: 8px;
      border-radius: 0px 0px 6px 6px;
      border-color: @nord10;
      border: 0px 1px 1px 1px;
      background-color: rgba(46,52,64,0.9);
      dynamic: false;
  }

  element {
      padding: 3px;
      vertical-align: 0.5;
      border-radius: 4px;
      background-color: transparent;
      color: @foreground;
      text-color: rgb(216, 222, 233);
  }

  element selected.normal {
      background-color: @nord7;
      text-color: #2e3440;
  }

  element-text, element-icon {
      background-color: inherit;
      text-color:       inherit;
  }

  button {
      padding: 6px;
      color: @foreground;
      horizontal-align: 0.5;

      border: 2px 0px 2px 2px;
      border-radius: 4px 0px 0px 4px;
      border-color: @foreground;
  }

  button selected normal {
      border: 2px 0px 2px 2px;
      border-color: @foreground;
  }
#+end_src
*** i3-apps theme
:PROPERTIES:
:header-args: :tangle ./.config/rofi/themes/i3-apps.rasi :mkdirp t
:END:
#+begin_src css -n
  /* -*-css -*- */
  @theme "i3-nord"

  window {
      location: southwest;
      /* anchor: center; */
      width: 40%;
      x-offset: 480;
      y-offset: -140;
      /* padding-right: 25px; */
  }

  listview {
      columns: 2;
      lines: 6;
  }

  /* inputbar { */
  /*     children: [textbox-prompt]; */
  /* } */

  /* textbox-prompt { */
  /*     str: "Apps"; */
  /*     text-color: inherit; */
  /* } */
#+end_src
*** i3-logout theme
:PROPERTIES:
:header-args: :tangle ./.config/rofi/themes/i3-logout.rasi :mkdirp t
:END:

#+begin_src css -n
  /* -*-css -*- */
  @theme "i3-nord"

  window {
      location: northeast;
      anchor:   center;
      transparency: "screenshot";
      width: 10%;
      padding: 10px;
      border:  0px;
      border-radius: 6px;
      x-offset: -120;
      y-offset: 100;
      spacing: 0;
      children: [mainbox];
  }

  listview {
      columns: 1;
      lines: 4;
  }
#+end_src
*** i3-logout
:PROPERTIES:
:header-args: :tangle ./.local/bin/rofi-i3-logout :mkdirp t :shebang #!/usr/bin/env bash
:END:

#+begin_src sh
  question=$(echo "󰌾 lock|󰍃 logout|󰜉 reboot|󰐥 shutdown" | rofi -sep "|" \
      -dmenu -i -p 'System: ' "" \
      -hide-scrollbar \
      -eh 1 \
      -color-enabled true \
      -theme "i3-logout")

  case $question in
      ,*lock)
          i3lock-fancy
          ;;
      ,*logout)
          i3-msg exit
          ;;
      ,*reboot)
          if [[ $(command -v systemctl) ]]; then
              systemctl reboot
          else
              shutdown -r now
          fi
          ;;
      ,*shutdown)
          if [[ $(command -v systemctl) ]]; then
              systemctl poweroff
          else
              poweroff
          fi
          ;;
      ,*)
          exit 0  # do nothing on wrong response
          ;;
  esac
#+end_src

* Footnotes

[fn:1] https://unix.stackexchange.com/questions/119212/understanding-window-manager-terminology-mod-keys-meta-keys-and-key-naming-co
